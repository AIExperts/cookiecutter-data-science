# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

strategy:
  matrix:
    linux-36:
      imageName: 'ubuntu-latest'
      python.version: '3.6'
    linux-37:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
    mac-36:
      imageName: 'macos-latest'
      python.version: '3.6'
    mac-37:
      imageName: 'macos-latest'
      python.version: '3.7'
    windows-36:
      imageName: 'windows-latest'
      python.version: '3.6'
    windows-37:
      imageName: 'windows-latest'
      python.version: '3.7'

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'
